services:
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
  
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    # command: sh -c "(hostname && echo 'Iniciando topics' && kafka-topics.sh --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 2 --topic ventas) && /opt/bitnami/scripts/kafka/entrypoint.sh /run.sh"

  database:
    image: bitnami/postgresql:12.10.0
    container_name: db-tarea
    volumes:
      - ./Carrito/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    environment:
      POSTGRESQL_USER: postgres
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_DATABASE: tarea
    restart: always

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@postgres.com
      PGADMIN_DEFAULT_PASSWORD: postgres
    ports:
      - "8080:80"
#Producer
  register:
    build:
      context: ./Register/
      dockerfile: Dockerfile 
    restart: always
    depends_on:
      - zookeeper
      - kafka
      - database
    environment:
      PORT: 3000
      kafkaHost: kafka:9092
    ports:
      - 3000:3000
    
  ventas:
    build:
      context: ./Ventas/
      dockerfile: Dockerfile 
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      PORT: 3000
      kafkaHost: kafka:9092
    ports:
      - 4000:3000
      
  aviso:
    build:
      context: ./Aviso/
      dockerfile: Dockerfile 
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      PORT: 3000
      kafkaHost: kafka:9092
    ports:
      - 6000:3000

# #Consumers

#   ventasxdias:
#     build:
#       context: ./VentasxDias/
#       dockerfile: Dockerfile 
#     restart: always
#     depends_on:
#       - zookeeper
#       - kafka
#     environment:
#       PORT: 3000
#       kafkaHost: kafka:9092
#     ports:
#       - 7000:3000
    
  stock:
    build:
      context: ./Stock/
      dockerfile: Dockerfile 
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      PORT: 3000
      kafkaHost: kafka:9092
    ports:
      - 8000:3000
